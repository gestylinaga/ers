---
import MainLayout from "../layouts/MainLayout.astro";
import Navbar from "../components/Navbar.astro";
---
<MainLayout title="Build Calculator | ers ">
 <h2>Build Calculator</h2>
 <Navbar />

 <main>
   <div>
     <label for="classes">Starting Class:</label>
     <select name="classes" id="classes" onchange="updateView()">
       <option value="confessor">Confessor</option>
       <option value="vagabond">Vagabond</option>
       <option value="samurai">Samurai</option>
       <option value="prisoner">Prisoner</option>
       <option value="warrior">Warrior</option>
       <option value="hero">Hero</option>
       <option value="prophet">Prophet</option>
       <option value="astrologer">Astrologer</option>
       <option value="bandit">Bandit</option>
       <option value="wretch">Wretch</option>
     </select>

     <div id="display">
       <img src="/imgs/confessor.webp" id="selected" alt="Class Image">
     </div>

   </div>
   <div id="statTable">
     <table>
       <tr>
         <th>Level</th>
       </tr>
       <tr>
         <th>Vigor</th>
       </tr>
       <tr>
         <th>Mind</th>
       </tr>
       <tr>
         <th>Endurance</th>
       </tr>
       <tr>
         <th>Strength</th>
       </tr>
       <tr>
         <th>Dexterity</th>
       </tr>
       <tr>
         <th>Intelligence</th>
       </tr>
       <tr>
         <th>Faith</th>
       </tr>
       <tr>
         <th>Arcane</th>
       </tr>
     </table>
   </div>
 </main>
</MainLayout>

<script>

const classList = {
  "confessor": [10, 10, 13, 10, 12, 12, 9, 14, 9],
  "vagabond": [9, 15, 10, 11, 14, 13, 9, 9, 7],
  "samurai": [9, 12, 11, 13, 12, 15, 9, 8, 8],
  "prisoner": [9, 11, 12, 11, 11, 14, 14, 6, 9],
  "warrior": [8, 11, 12, 11, 10, 16, 10, 8, 9],
  "hero": [7, 14, 9, 12, 16, 9, 7, 8, 11],
  "prophet": [7, 10, 14, 8, 11, 10, 7, 16, 10],
  "astrologer": [6, 9, 15, 9, 8, 12, 16, 7, 9],
  "bandit": [5, 10, 11, 10, 9, 13, 9, 8, 14],
  "wretch": [1, 10, 10, 10, 10, 10, 10, 10, 10]
}

function clearStats() {
  let existingStats = document.querySelectorAll("td");
  existingStats.forEach(e => e.remove());
}

function populateStats(classStats: any) {
  let tableRows = document.querySelectorAll("tr");
  let i = 0;
  for (let row of tableRows) {
    const newStat = document.createElement("td");
    newStat.innerHTML = classStats[i];
    row.appendChild(newStat);
    i++;
  }
}

function getImage(opt: string) {
  let img = new Image();
  let selectedImg = img.src = `/ers/imgs/${opt}.webp`;
  document.getElementById("selected").src = selectedImg;
}

function updateView() {
  let opt = document.getElementById("classes").value;

  getImage(opt);
  clearStats();
  populateStats(classList[opt])

}

window.onload = updateView;
document.getElementById("classes").onchange = updateView;

</script>

<style>
  main {
    display: flex;
    gap: 1rem;
    padding-top: 3rem;
  }

  #selected {
    padding-top: 1rem;
  }
  #statTable {
    height: 100vr;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  th {
    text-align: right;
    padding-inline: 1rem;
    padding-block: .5rem;
  }
  td {
    text-align: center;
  }
</style>
